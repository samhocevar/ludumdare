[vert.glsl]

#version 120

uniform float u_time;

attribute vec2 in_Position;

varying vec2 pass_pos;

void main(void)
{
    pass_pos.xy = in_Position;

    gl_Position = vec4(in_Position, 0.0, 1.0);
}

[frag.glsl]

#version 120

#if defined GL_ES
precision highp float;
#endif

uniform float u_time;
uniform vec2 u_camera;

varying vec2 pass_pos;

float rand(vec2 co)
{
    return fract(sin(dot(co.xy, vec2(.129898, .78233))) * 43758.5453);
}

vec2 pos_to_pixel(vec2 pos, float speed)
{
    vec2 screen = vec2(320.0, 240.0);

    vec2 pixels = floor(screen * pos * 0.5 + vec2(0, u_time) * speed);
    return mod(pixels, 2048.0);
}

vec4 pos_to_color(vec2 pos, float speed, float odds)
{
    vec2 pixels = pos_to_pixel(pos, speed);

    if (rand(pixels) > odds)
        return vec4(0.8, 0.8, 0.8, 1.0);

    if (rand(pixels - vec2(0, 1)) > odds)
        return vec4(0.4, 0.4, 0.7, 1.0);

    if (rand(pixels - vec2(0, 2)) > odds)
        return vec4(0.2, 0.2, 0.5, 1.0);

    return vec4(0.0, 0.0, 0.0, 1.0);
}

void main(void)
{
    vec2 pos = pass_pos - u_camera;

    vec4 color = pos_to_color(pos, 100.0, 0.998);
    color = max(color, pos_to_color(pos + vec2(0.3), 200.0, 0.998));
    color = max(color, pos_to_color(pos + vec2(0.7), 300.0, 0.998));

    gl_FragColor = color;
}

